/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../../common";
import type {
  StreamCreator,
  StreamCreatorInterface,
} from "../../contracts/StreamCreator";

const _abi = [
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "_pToken",
        type: "address",
      },
      {
        indexed: false,
        internalType: "address",
        name: "_xToken",
        type: "address",
      },
      {
        indexed: false,
        internalType: "address",
        name: "_dToken",
        type: "address",
      },
      {
        indexed: false,
        internalType: "address[]",
        name: "_investors",
        type: "address[]",
      },
      {
        indexed: false,
        internalType: "uint256[]",
        name: "_allocations",
        type: "uint256[]",
      },
    ],
    name: "RoundCreaated",
    type: "event",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "contract IERC20",
            name: "_pToken",
            type: "address",
          },
          {
            internalType: "address",
            name: "_dTokenImpl",
            type: "address",
          },
          {
            internalType: "string",
            name: "_xName",
            type: "string",
          },
          {
            internalType: "string",
            name: "_xSymbol",
            type: "string",
          },
          {
            internalType: "string",
            name: "_dName",
            type: "string",
          },
          {
            internalType: "string",
            name: "_dSymbol",
            type: "string",
          },
          {
            internalType: "address",
            name: "_streamImpl",
            type: "address",
          },
          {
            internalType: "address[]",
            name: "_investors",
            type: "address[]",
          },
          {
            internalType: "uint256[]",
            name: "_allocations",
            type: "uint256[]",
          },
          {
            internalType: "uint256",
            name: "_maturityTime",
            type: "uint256",
          },
        ],
        internalType: "struct StreamCreator.Round",
        name: "round",
        type: "tuple",
      },
    ],
    name: "CreateRound",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_ptoken",
        type: "address",
      },
      {
        internalType: "address",
        name: "_dImpl",
        type: "address",
      },
      {
        internalType: "address[]",
        name: "_investors",
        type: "address[]",
      },
      {
        internalType: "uint256[]",
        name: "_allocations",
        type: "uint256[]",
      },
      {
        internalType: "string",
        name: "_name",
        type: "string",
      },
      {
        internalType: "string",
        name: "_symbol",
        type: "string",
      },
    ],
    name: "_createDToken",
    outputs: [
      {
        internalType: "address",
        name: "_dToken",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_ptoken",
        type: "address",
      },
      {
        internalType: "address",
        name: "_impl",
        type: "address",
      },
      {
        internalType: "address",
        name: "_xToken",
        type: "address",
      },
    ],
    name: "_createStream",
    outputs: [
      {
        internalType: "address",
        name: "_stream",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "contract IERC20",
        name: "_ptoken",
        type: "address",
      },
      {
        internalType: "string",
        name: "_name",
        type: "string",
      },
      {
        internalType: "string",
        name: "_symbol",
        type: "string",
      },
    ],
    name: "_createXToken",
    outputs: [
      {
        internalType: "contract ISuperToken",
        name: "_xToken",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "host",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "idToRound",
    outputs: [
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "startTime",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "maturityTime",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_host",
        type: "address",
      },
      {
        internalType: "contract SuperTokenFactory",
        name: "_tokenWrapperFactory",
        type: "address",
      },
      {
        internalType: "contract LiquidityHub",
        name: "_liquidityHub",
        type: "address",
      },
    ],
    name: "initialize",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "liquidityHub",
    outputs: [
      {
        internalType: "contract LiquidityHub",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "streamToId",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "tokenWrapperFactory",
    outputs: [
      {
        internalType: "contract SuperTokenFactory",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
];

const _bytecode =
  "0x608060405234801561001057600080fd5b506112ef806100206000396000f3fe608060405234801561001057600080fd5b506004361061009e5760003560e01c8063966da41011610066578063966da4101461012157806397e724c814610134578063ac8a916014610162578063c0c53b8b14610190578063f437bc59146101dd57600080fd5b806312b620ed146100a357806337c78497146100d35780634639139d146100e657806368e7f8b9146100f95780637ff627831461010c575b600080fd5b6100b66100b1366004610d3d565b6101f0565b6040516001600160a01b0390911681526020015b60405180910390f35b6004546100b6906001600160a01b031681565b6005546100b6906001600160a01b031681565b6100b6610107366004610e0a565b6102a5565b61011f61011a366004610e55565b6102da565b005b6100b661012f366004610fbb565b61069d565b610154610142366004611031565b60026020526000908152604090205481565b6040519081526020016100ca565b61017561017036600461104e565b61079d565b604080519384526020840192909252908201526060016100ca565b61011f61019e366004610e0a565b600380546001600160a01b039485166001600160a01b031991821617909155600580549285169282169290921790915560048054929093169116179055565b6003546100b6906001600160a01b031681565b6040516bffffffffffffffffffffffff19606088901b1660208201526000906102349087906034015b604051602081830303815290604052805190602001206107df565b60405163445d978760e01b81529091506001600160a01b0387169063445d97879061026990869086908a908a9060040161113c565b600060405180830381600087803b15801561028357600080fd5b505af1158015610297573d6000803e3d6000fd5b505050509695505050505050565b6040516bffffffffffffffffffffffff19606085901b1660208201526000906102d2908490603401610219565b949350505050565b60006102f382600001518360400151846060015161069d565b9050600061031a8284602001518560e0015186610100015187608001518860a001516101f0565b905060005b8360e00151518110156105e757600061034185600001518660c00151866102a5565b90506103853382876101000151858151811061035f5761035f611189565b602002602001015188600001516001600160a01b031661088a909392919063ffffffff16565b84600001516001600160a01b031663095ea7b38587610100015185815181106103b0576103b0611189565b60200260200101516040518363ffffffff1660e01b81526004016103e99291906001600160a01b03929092168252602082015260400190565b6020604051808303816000875af1158015610408573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061042c919061119f565b50836001600160a01b03166345977d03866101000151848151811061045357610453611189565b60200260200101516040518263ffffffff1660e01b815260040161047991815260200190565b600060405180830381600087803b15801561049357600080fd5b505af11580156104a7573d6000803e3d6000fd5b5050505060006104b660005490565b90506104c6600080546001019055565b600354600554604051637bcc343560e01b8152600481018490526001600160a01b03928316602482015287831660448201529082166064820152908316608482018190526103e860a483015290637bcc34359060c401600060405180830381600087803b15801561053657600080fd5b505af115801561054a573d6000803e3d6000fd5b50505050600160008281526020019081526020016000206040518060600160405280886101000151868151811061058357610583611189565b602090810291909101810151825242828201526101208a0151604092830152835460018181018655600095865294829020845160039092020190815590830151938101939093550151600290910155508190506105df816111c1565b91505061031f565b50600554604051636600106160e01b81526001600160a01b038481166004830152838116602483015290911690636600106190604401600060405180830381600087803b15801561063757600080fd5b505af115801561064b573d6000803e3d6000fd5b5050845160e08601516101008701516040517f05e4c32360c1c14c1cbb63e5bb73730ce3c613644cc561e01b6f35dddbd74089955061069094508792879290916111e8565b60405180910390a1505050565b6000807f5f5ffa64f9b147690f5d8ec8cc5b5704631d3a77a7e940a3004dd53ae9e9b643905060008186600087876040516024016106de949392919061122e565b60408051601f198184030181529181526020820180516001600160e01b03166001600160e01b031990941693909317909252600454915190925060009182916001600160a01b0390911690829061073690869061126d565b60006040518083038185875af1925050503d8060008114610773576040519150601f19603f3d011682016040523d82523d6000602084013e610778565b606091505b5091509150808060200190518101906107919190611289565b98975050505050505050565b600160205281600052604060002081815481106107b957600080fd5b600091825260209091206003909102018054600182015460029092015490935090915083565b6000604051733d602d80600a3d3981f3363d3d373d3d3d363d7360601b81528360601b60148201526e5af43d82803e903d91602b57fd5bf360881b6028820152826037826000f59150506001600160a01b0381166108845760405162461bcd60e51b815260206004820152601760248201527f455243313136373a2063726561746532206661696c656400000000000000000060448201526064015b60405180910390fd5b92915050565b604080516001600160a01b0385811660248301528416604482015260648082018490528251808303909101815260849091019091526020810180516001600160e01b03166323b872dd60e01b1790526108e49085906108ea565b50505050565b600061093f826040518060400160405280602081526020017f5361666545524332303a206c6f772d6c6576656c2063616c6c206661696c6564815250856001600160a01b03166109c19092919063ffffffff16565b8051909150156109bc578080602001905181019061095d919061119f565b6109bc5760405162461bcd60e51b815260206004820152602a60248201527f5361666545524332303a204552433230206f7065726174696f6e20646964206e6044820152691bdd081cdd58d8d9595960b21b606482015260840161087b565b505050565b60606102d284846000856109d7565b9392505050565b606082471015610a385760405162461bcd60e51b815260206004820152602660248201527f416464726573733a20696e73756666696369656e742062616c616e636520666f6044820152651c8818d85b1b60d21b606482015260840161087b565b6001600160a01b0385163b610a8f5760405162461bcd60e51b815260206004820152601d60248201527f416464726573733a2063616c6c20746f206e6f6e2d636f6e7472616374000000604482015260640161087b565b600080866001600160a01b03168587604051610aab919061126d565b60006040518083038185875af1925050503d8060008114610ae8576040519150601f19603f3d011682016040523d82523d6000602084013e610aed565b606091505b5091509150610afd828286610b08565b979650505050505050565b60608315610b175750816109d0565b825115610b275782518084602001fd5b8160405162461bcd60e51b815260040161087b91906112a6565b6001600160a01b0381168114610b5657600080fd5b50565b8035610b6481610b41565b919050565b634e487b7160e01b600052604160045260246000fd5b604051610140810167ffffffffffffffff81118282101715610ba357610ba3610b69565b60405290565b604051601f8201601f1916810167ffffffffffffffff81118282101715610bd257610bd2610b69565b604052919050565b600067ffffffffffffffff821115610bf457610bf4610b69565b5060051b60200190565b600082601f830112610c0f57600080fd5b81356020610c24610c1f83610bda565b610ba9565b82815260059290921b84018101918181019086841115610c4357600080fd5b8286015b84811015610c67578035610c5a81610b41565b8352918301918301610c47565b509695505050505050565b600082601f830112610c8357600080fd5b81356020610c93610c1f83610bda565b82815260059290921b84018101918181019086841115610cb257600080fd5b8286015b84811015610c675780358352918301918301610cb6565b600082601f830112610cde57600080fd5b813567ffffffffffffffff811115610cf857610cf8610b69565b610d0b601f8201601f1916602001610ba9565b818152846020838601011115610d2057600080fd5b816020850160208301376000918101602001919091529392505050565b60008060008060008060c08789031215610d5657600080fd5b610d5f87610b59565b9550610d6d60208801610b59565b9450604087013567ffffffffffffffff80821115610d8a57600080fd5b610d968a838b01610bfe565b95506060890135915080821115610dac57600080fd5b610db88a838b01610c72565b94506080890135915080821115610dce57600080fd5b610dda8a838b01610ccd565b935060a0890135915080821115610df057600080fd5b50610dfd89828a01610ccd565b9150509295509295509295565b600080600060608486031215610e1f57600080fd5b8335610e2a81610b41565b92506020840135610e3a81610b41565b91506040840135610e4a81610b41565b809150509250925092565b600060208284031215610e6757600080fd5b813567ffffffffffffffff80821115610e7f57600080fd5b908301906101408286031215610e9457600080fd5b610e9c610b7f565b610ea583610b59565b8152610eb360208401610b59565b6020820152604083013582811115610eca57600080fd5b610ed687828601610ccd565b604083015250606083013582811115610eee57600080fd5b610efa87828601610ccd565b606083015250608083013582811115610f1257600080fd5b610f1e87828601610ccd565b60808301525060a083013582811115610f3657600080fd5b610f4287828601610ccd565b60a083015250610f5460c08401610b59565b60c082015260e083013582811115610f6b57600080fd5b610f7787828601610bfe565b60e0830152506101008084013583811115610f9157600080fd5b610f9d88828701610c72565b91830191909152506101209283013592810192909252509392505050565b600080600060608486031215610fd057600080fd5b8335610fdb81610b41565b9250602084013567ffffffffffffffff80821115610ff857600080fd5b61100487838801610ccd565b9350604086013591508082111561101a57600080fd5b5061102786828701610ccd565b9150509250925092565b60006020828403121561104357600080fd5b81356109d081610b41565b6000806040838503121561106157600080fd5b50508035926020909101359150565b60005b8381101561108b578181015183820152602001611073565b838111156108e45750506000910152565b600081518084526110b4816020860160208601611070565b601f01601f19169290920160200192915050565b600081518084526020808501945080840160005b838110156111015781516001600160a01b0316875295820195908201906001016110dc565b509495945050505050565b600081518084526020808501945080840160005b8381101561110157815187529582019590820190600101611120565b60808152600061114f608083018761109c565b8281036020840152611161818761109c565b9050828103604084015261117581866110c8565b90508281036060840152610afd818561110c565b634e487b7160e01b600052603260045260246000fd5b6000602082840312156111b157600080fd5b815180151581146109d057600080fd5b6000600182016111e157634e487b7160e01b600052601160045260246000fd5b5060010190565b6001600160a01b03868116825285811660208301528416604082015260a06060820181905260009061121c908301856110c8565b8281036080840152610791818561110c565b6001600160a01b038516815260ff8416602082015260806040820181905260009061125b9083018561109c565b8281036060840152610afd818561109c565b6000825161127f818460208701611070565b9190910192915050565b60006020828403121561129b57600080fd5b81516109d081610b41565b6020815260006109d0602083018461109c56fea26469706673582212206f3e838698996f5a3be0405e4100cca4d3148c1870bd7d119b4e2ed5021ecdfc64736f6c634300080e0033";

type StreamCreatorConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: StreamCreatorConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class StreamCreator__factory extends ContractFactory {
  constructor(...args: StreamCreatorConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<StreamCreator> {
    return super.deploy(overrides || {}) as Promise<StreamCreator>;
  }
  override getDeployTransaction(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  override attach(address: string): StreamCreator {
    return super.attach(address) as StreamCreator;
  }
  override connect(signer: Signer): StreamCreator__factory {
    return super.connect(signer) as StreamCreator__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): StreamCreatorInterface {
    return new utils.Interface(_abi) as StreamCreatorInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): StreamCreator {
    return new Contract(address, _abi, signerOrProvider) as StreamCreator;
  }
}
