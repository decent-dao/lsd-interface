/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../../common";
import type {
  LiquidityHub,
  LiquidityHubInterface,
} from "../../contracts/LiquidityHub";

const _abi = [
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "claimer",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "address",
        name: "xToken",
        type: "address",
      },
      {
        indexed: false,
        internalType: "address",
        name: "dToken",
        type: "address",
      },
    ],
    name: "AmountClaimed",
    type: "event",
  },
  {
    inputs: [],
    name: "_fairClaim",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "xtoken",
        type: "address",
      },
      {
        internalType: "address",
        name: "dtoken",
        type: "address",
      },
    ],
    name: "addStream",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "xToken",
        type: "address",
      },
      {
        internalType: "address",
        name: "dToken",
        type: "address",
      },
    ],
    name: "cliamAmount",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_streamCreator",
        type: "address",
      },
    ],
    name: "initalize",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
];

const _bytecode =
  "0x608060405234801561001057600080fd5b506106f5806100206000396000f3fe608060405234801561001057600080fd5b506004361061004c5760003560e01c806336db63721461005157806366001061146100665780638dc5fbf9146100a2578063ec5baa56146100d2575b600080fd5b61006461005f36600461058e565b6100e6565b005b61006461007436600461058e565b6001600160a01b03918216600090815260016020526040902080546001600160a01b03191691909216179055565b6100646100b03660046105c1565b600080546001600160a01b0319166001600160a01b0392909216919091179055565b600160405190815260200160405180910390f35b6040516370a0823160e01b81523060048201526000906001600160a01b038416906370a0823190602401602060405180830381865afa15801561012d573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061015191906105dc565b6040516370a0823160e01b81523360048201529091506000906001600160a01b038416906370a0823190602401602060405180830381865afa15801561019b573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906101bf91906105dc565b90506000828211156101d3575081806101d7565b5080805b506101fb3360006101e96001856105f5565b6001600160a01b038816929190610272565b61021b3361020a6001846105f5565b6001600160a01b03881691906102e3565b60408051338152602081018390526001600160a01b03878116828401528616606082015290517f5dcb9db58782208d5d3a84a6154f0163df04388610a271de6394abc32c9f11a49181900360800190a15050505050565b6040516001600160a01b03808516602483015283166044820152606481018290526102dd9085906323b872dd60e01b906084015b60408051601f198184030181529190526020810180516001600160e01b03166001600160e01b031990931692909217909152610318565b50505050565b6040516001600160a01b03831660248201526044810182905261031390849063a9059cbb60e01b906064016102a6565b505050565b600061036d826040518060400160405280602081526020017f5361666545524332303a206c6f772d6c6576656c2063616c6c206661696c6564815250856001600160a01b03166103ef9092919063ffffffff16565b805190915015610313578080602001905181019061038b9190610622565b6103135760405162461bcd60e51b815260206004820152602a60248201527f5361666545524332303a204552433230206f7065726174696f6e20646964206e6044820152691bdd081cdd58d8d9595960b21b60648201526084015b60405180910390fd5b60606103fe8484600085610408565b90505b9392505050565b6060824710156104695760405162461bcd60e51b815260206004820152602660248201527f416464726573733a20696e73756666696369656e742062616c616e636520666f6044820152651c8818d85b1b60d21b60648201526084016103e6565b6001600160a01b0385163b6104c05760405162461bcd60e51b815260206004820152601d60248201527f416464726573733a2063616c6c20746f206e6f6e2d636f6e747261637400000060448201526064016103e6565b600080866001600160a01b031685876040516104dc9190610670565b60006040518083038185875af1925050503d8060008114610519576040519150601f19603f3d011682016040523d82523d6000602084013e61051e565b606091505b509150915061052e828286610539565b979650505050505050565b60608315610548575081610401565b8251156105585782518084602001fd5b8160405162461bcd60e51b81526004016103e6919061068c565b80356001600160a01b038116811461058957600080fd5b919050565b600080604083850312156105a157600080fd5b6105aa83610572565b91506105b860208401610572565b90509250929050565b6000602082840312156105d357600080fd5b61040182610572565b6000602082840312156105ee57600080fd5b5051919050565b600081600019048311821515161561061d57634e487b7160e01b600052601160045260246000fd5b500290565b60006020828403121561063457600080fd5b8151801515811461040157600080fd5b60005b8381101561065f578181015183820152602001610647565b838111156102dd5750506000910152565b60008251610682818460208701610644565b9190910192915050565b60208152600082518060208401526106ab816040850160208701610644565b601f01601f1916919091016040019291505056fea26469706673582212203defed6b203b82c5e68f3384264412029602478105bc6ddbbf34a6d1d42521d464736f6c634300080e0033";

type LiquidityHubConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: LiquidityHubConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class LiquidityHub__factory extends ContractFactory {
  constructor(...args: LiquidityHubConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<LiquidityHub> {
    return super.deploy(overrides || {}) as Promise<LiquidityHub>;
  }
  override getDeployTransaction(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  override attach(address: string): LiquidityHub {
    return super.attach(address) as LiquidityHub;
  }
  override connect(signer: Signer): LiquidityHub__factory {
    return super.connect(signer) as LiquidityHub__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): LiquidityHubInterface {
    return new utils.Interface(_abi) as LiquidityHubInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): LiquidityHub {
    return new Contract(address, _abi, signerOrProvider) as LiquidityHub;
  }
}
