/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../../common";
import type { DToken, DTokenInterface } from "../../contracts/DToken";

const _abi = [
  {
    inputs: [],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "Approval",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint8",
        name: "version",
        type: "uint8",
      },
    ],
    name: "Initialized",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "Transfer",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
    ],
    name: "allowance",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "approve",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "balanceOf",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "decimals",
    outputs: [
      {
        internalType: "uint8",
        name: "",
        type: "uint8",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "subtractedValue",
        type: "uint256",
      },
    ],
    name: "decreaseAllowance",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "addedValue",
        type: "uint256",
      },
    ],
    name: "increaseAllowance",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "string",
        name: "_name",
        type: "string",
      },
      {
        internalType: "string",
        name: "_symbol",
        type: "string",
      },
      {
        internalType: "address[]",
        name: "_holders",
        type: "address[]",
      },
      {
        internalType: "uint256[]",
        name: "_allocations",
        type: "uint256[]",
      },
    ],
    name: "initialize",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "name",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "symbol",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "totalSupply",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "transfer",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "transferFrom",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
];

const _bytecode =
  "0x608060405234801561001057600080fd5b5061001961001e565b610144565b61002860ff61002b565b50565b60008054610100900460ff16156100be578160ff16600114801561005f575061005d3061013560201b61044e1760201c565b155b6100b65760405162461bcd60e51b815260206004820152602e60248201526000805160206200108083398151915260448201526d191e481a5b9a5d1a585b1a5e995960921b60648201526084015b60405180910390fd5b506000919050565b60005460ff80841691161061011b5760405162461bcd60e51b815260206004820152602e60248201526000805160206200108083398151915260448201526d191e481a5b9a5d1a585b1a5e995960921b60648201526084016100ad565b506000805460ff191660ff92909216919091179055600190565b6001600160a01b03163b151590565b610f2c80620001546000396000f3fe608060405234801561001057600080fd5b50600436106100b45760003560e01c8063445d978711610071578063445d97871461014157806370a082311461015657806395d89b411461017f578063a457c2d714610187578063a9059cbb1461019a578063dd62ed3e146101ad57600080fd5b806306fdde03146100b9578063095ea7b3146100d757806318160ddd146100fa57806323b872dd1461010c578063313ce5671461011f578063395093511461012e575b600080fd5b6100c16101c0565b6040516100ce9190610a52565b60405180910390f35b6100ea6100e5366004610abe565b610252565b60405190151581526020016100ce565b6035545b6040519081526020016100ce565b6100ea61011a366004610ae8565b61026a565b604051601281526020016100ce565b6100ea61013c366004610abe565b61028e565b61015461014f366004610c6a565b6102b0565b005b6100fe610164366004610d71565b6001600160a01b031660009081526033602052604090205490565b6100c1610386565b6100ea610195366004610abe565b610395565b6100ea6101a8366004610abe565b610415565b6100fe6101bb366004610d93565b610423565b6060603680546101cf90610dc6565b80601f01602080910402602001604051908101604052809291908181526020018280546101fb90610dc6565b80156102485780601f1061021d57610100808354040283529160200191610248565b820191906000526020600020905b81548152906001019060200180831161022b57829003601f168201915b5050505050905090565b60003361026081858561045d565b5060019392505050565b600033610278858285610581565b6102838585856105fb565b506001949350505050565b6000336102608185856102a18383610423565b6102ab9190610e16565b61045d565b60006102bc60016107c9565b905080156102d4576000805461ff0019166101001790555b6102de8585610856565b60005b8351811015610338576103268482815181106102ff576102ff610e2e565b602002602001015184838151811061031957610319610e2e565b602002602001015161088b565b8061033081610e44565b9150506102e1565b50801561037f576000805461ff0019169055604051600181527f7f26b83ff96e1f2b6a682f133852f6798a09c465da95921460cefb38474024989060200160405180910390a15b5050505050565b6060603780546101cf90610dc6565b600033816103a38286610423565b9050838110156104085760405162461bcd60e51b815260206004820152602560248201527f45524332303a2064656372656173656420616c6c6f77616e63652062656c6f77604482015264207a65726f60d81b60648201526084015b60405180910390fd5b610283828686840361045d565b6000336102608185856105fb565b6001600160a01b03918216600090815260346020908152604080832093909416825291909152205490565b6001600160a01b03163b151590565b6001600160a01b0383166104bf5760405162461bcd60e51b8152602060048201526024808201527f45524332303a20617070726f76652066726f6d20746865207a65726f206164646044820152637265737360e01b60648201526084016103ff565b6001600160a01b0382166105205760405162461bcd60e51b815260206004820152602260248201527f45524332303a20617070726f766520746f20746865207a65726f206164647265604482015261737360f01b60648201526084016103ff565b6001600160a01b0383811660008181526034602090815260408083209487168084529482529182902085905590518481527f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925910160405180910390a3505050565b600061058d8484610423565b905060001981146105f557818110156105e85760405162461bcd60e51b815260206004820152601d60248201527f45524332303a20696e73756666696369656e7420616c6c6f77616e636500000060448201526064016103ff565b6105f5848484840361045d565b50505050565b6001600160a01b03831661065f5760405162461bcd60e51b815260206004820152602560248201527f45524332303a207472616e736665722066726f6d20746865207a65726f206164604482015264647265737360d81b60648201526084016103ff565b6001600160a01b0382166106c15760405162461bcd60e51b815260206004820152602360248201527f45524332303a207472616e7366657220746f20746865207a65726f206164647260448201526265737360e81b60648201526084016103ff565b6001600160a01b038316600090815260336020526040902054818110156107395760405162461bcd60e51b815260206004820152602660248201527f45524332303a207472616e7366657220616d6f756e7420657863656564732062604482015265616c616e636560d01b60648201526084016103ff565b6001600160a01b03808516600090815260336020526040808220858503905591851681529081208054849290610770908490610e16565b92505081905550826001600160a01b0316846001600160a01b03167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef846040516107bc91815260200190565b60405180910390a36105f5565b60008054610100900460ff1615610810578160ff1660011480156107ec5750303b155b6108085760405162461bcd60e51b81526004016103ff90610e5d565b506000919050565b60005460ff8084169116106108375760405162461bcd60e51b81526004016103ff90610e5d565b506000805460ff191660ff92909216919091179055600190565b919050565b600054610100900460ff1661087d5760405162461bcd60e51b81526004016103ff90610eab565b610887828261096f565b5050565b6001600160a01b0382166108e15760405162461bcd60e51b815260206004820152601f60248201527f45524332303a206d696e7420746f20746865207a65726f20616464726573730060448201526064016103ff565b80603560008282546108f39190610e16565b90915550506001600160a01b03821660009081526033602052604081208054839290610920908490610e16565b90915550506040518181526001600160a01b038316906000907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef9060200160405180910390a35050565b505050565b600054610100900460ff166109965760405162461bcd60e51b81526004016103ff90610eab565b81516109a99060369060208501906109b9565b50805161096a9060379060208401905b8280546109c590610dc6565b90600052602060002090601f0160209004810192826109e75760008555610a2d565b82601f10610a0057805160ff1916838001178555610a2d565b82800160010185558215610a2d579182015b82811115610a2d578251825591602001919060010190610a12565b50610a39929150610a3d565b5090565b5b80821115610a395760008155600101610a3e565b600060208083528351808285015260005b81811015610a7f57858101830151858201604001528201610a63565b81811115610a91576000604083870101525b50601f01601f1916929092016040019392505050565b80356001600160a01b038116811461085157600080fd5b60008060408385031215610ad157600080fd5b610ada83610aa7565b946020939093013593505050565b600080600060608486031215610afd57600080fd5b610b0684610aa7565b9250610b1460208501610aa7565b9150604084013590509250925092565b634e487b7160e01b600052604160045260246000fd5b604051601f8201601f1916810167ffffffffffffffff81118282101715610b6357610b63610b24565b604052919050565b600082601f830112610b7c57600080fd5b813567ffffffffffffffff811115610b9657610b96610b24565b610ba9601f8201601f1916602001610b3a565b818152846020838601011115610bbe57600080fd5b816020850160208301376000918101602001919091529392505050565b600067ffffffffffffffff821115610bf557610bf5610b24565b5060051b60200190565b600082601f830112610c1057600080fd5b81356020610c25610c2083610bdb565b610b3a565b82815260059290921b84018101918181019086841115610c4457600080fd5b8286015b84811015610c5f5780358352918301918301610c48565b509695505050505050565b60008060008060808587031215610c8057600080fd5b843567ffffffffffffffff80821115610c9857600080fd5b610ca488838901610b6b565b9550602091508187013581811115610cbb57600080fd5b610cc789828a01610b6b565b955050604087013581811115610cdc57600080fd5b8701601f81018913610ced57600080fd5b8035610cfb610c2082610bdb565b81815260059190911b8201840190848101908b831115610d1a57600080fd5b928501925b82841015610d3f57610d3084610aa7565b82529285019290850190610d1f565b96505050506060870135915080821115610d5857600080fd5b50610d6587828801610bff565b91505092959194509250565b600060208284031215610d8357600080fd5b610d8c82610aa7565b9392505050565b60008060408385031215610da657600080fd5b610daf83610aa7565b9150610dbd60208401610aa7565b90509250929050565b600181811c90821680610dda57607f821691505b602082108103610dfa57634e487b7160e01b600052602260045260246000fd5b50919050565b634e487b7160e01b600052601160045260246000fd5b60008219821115610e2957610e29610e00565b500190565b634e487b7160e01b600052603260045260246000fd5b600060018201610e5657610e56610e00565b5060010190565b6020808252602e908201527f496e697469616c697a61626c653a20636f6e747261637420697320616c72656160408201526d191e481a5b9a5d1a585b1a5e995960921b606082015260800190565b6020808252602b908201527f496e697469616c697a61626c653a20636f6e7472616374206973206e6f74206960408201526a6e697469616c697a696e6760a81b60608201526080019056fea2646970667358221220c7a3d7ad25e11e49231311f632fd0a5497523502d534e111a61f2d82a0393f3364736f6c634300080e0033496e697469616c697a61626c653a20636f6e747261637420697320616c726561";

type DTokenConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: DTokenConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class DToken__factory extends ContractFactory {
  constructor(...args: DTokenConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<DToken> {
    return super.deploy(overrides || {}) as Promise<DToken>;
  }
  override getDeployTransaction(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  override attach(address: string): DToken {
    return super.attach(address) as DToken;
  }
  override connect(signer: Signer): DToken__factory {
    return super.connect(signer) as DToken__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): DTokenInterface {
    return new utils.Interface(_abi) as DTokenInterface;
  }
  static connect(address: string, signerOrProvider: Signer | Provider): DToken {
    return new Contract(address, _abi, signerOrProvider) as DToken;
  }
}
