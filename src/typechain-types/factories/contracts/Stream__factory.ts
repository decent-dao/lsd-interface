/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../../common";
import type { Stream, StreamInterface } from "../../contracts/Stream";

const _abi = [
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint8",
        name: "version",
        type: "uint8",
      },
    ],
    name: "Initialized",
    type: "event",
  },
  {
    inputs: [],
    name: "cfaV1",
    outputs: [
      {
        internalType: "contract ISuperfluid",
        name: "host",
        type: "address",
      },
      {
        internalType: "contract IConstantFlowAgreementV1",
        name: "cfa",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "id",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_id",
        type: "uint256",
      },
      {
        internalType: "contract ISuperfluid",
        name: "_host",
        type: "address",
      },
      {
        internalType: "contract ISuperfluidToken",
        name: "_token",
        type: "address",
      },
      {
        internalType: "address",
        name: "_receiver",
        type: "address",
      },
      {
        internalType: "address",
        name: "_streamCreator",
        type: "address",
      },
      {
        internalType: "int96",
        name: "_flowRate",
        type: "int96",
      },
    ],
    name: "initialize",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "streamCreator",
    outputs: [
      {
        internalType: "contract StreamCreator",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
];

const _bytecode =
  "0x608060405234801561001057600080fd5b506106ca806100206000396000f3fe608060405234801561001057600080fd5b506004361061004c5760003560e01c80637bcc343514610051578063af640d0f14610066578063d3112b2e14610082578063ef4a57d1146100bc575b600080fd5b61006461005f366004610411565b6100e7565b005b61006f60015481565b6040519081526020015b60405180910390f35b60035460045461009c916001600160a01b03908116911682565b604080516001600160a01b03938416815292909116602083015201610079565b6002546100cf906001600160a01b031681565b6040516001600160a01b039091168152602001610079565b60006100f36001610251565b9050801561010b576000805461ff0019166101001790555b600280546001600160a01b0319166001600160a01b03858116919091179091556040805180820182529188168083529051635b69006f60e11b81527fa9214cc96615e0085d3bb077758db69497dc2dce3b2b1e97bc93c3d18d83efd3600482015260208301919063b6d200de90602401602060405180830381865afa158015610198573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906101bc9190610491565b6001600160a01b039081169091528151600380546001600160a01b03199081169284169290921790556020909201516004805490931691161790556102028585846102e2565b8015610248576000805461ff0019169055604051600181527f7f26b83ff96e1f2b6a682f133852f6798a09c465da95921460cefb38474024989060200160405180910390a15b50505050505050565b60008054610100900460ff16156102a1578160ff1660011480156102745750303b155b6102995760405162461bcd60e51b8152600401610290906104b5565b60405180910390fd5b506000919050565b60005460ff8084169116106102c85760405162461bcd60e51b8152600401610290906104b5565b506000805460ff191660ff92909216919091179055600190565b6102ef60038385846102f4565b505050565b60408051600081526020810190915261031490859085908590859061031a565b50505050565b845460018601546040805160008152602081019091526001600160a01b03928316926339255d5b92169081906362fc305e9061035f9089908b908a9060448101610571565b60408051808303601f1901815291815260208201805160e094851b6001600160e01b03909116179052519185901b6001600160e01b03191682526103aa9392509086906004016105b1565b6000604051808303816000875af11580156103c9573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f191682016040526103f191908101906105e7565b505050505050565b6001600160a01b038116811461040e57600080fd5b50565b60008060008060008060c0878903121561042a57600080fd5b86359550602087013561043c816103f9565b9450604087013561044c816103f9565b9350606087013561045c816103f9565b9250608087013561046c816103f9565b915060a0870135600b81900b811461048357600080fd5b809150509295509295509295565b6000602082840312156104a357600080fd5b81516104ae816103f9565b9392505050565b6020808252602e908201527f496e697469616c697a61626c653a20636f6e747261637420697320616c72656160408201526d191e481a5b9a5d1a585b1a5e995960921b606082015260800190565b634e487b7160e01b600052604160045260246000fd5b60005b8381101561053457818101518382015260200161051c565b838111156103145750506000910152565b6000815180845261055d816020860160208601610519565b601f01601f19169290920160200192915050565b6001600160a01b03858116825284166020820152600b83900b60408201526080606082018190526000906105a790830184610545565b9695505050505050565b6001600160a01b03841681526060602082018190526000906105d590830185610545565b82810360408401526105a78185610545565b6000602082840312156105f957600080fd5b815167ffffffffffffffff8082111561061157600080fd5b818401915084601f83011261062557600080fd5b81518181111561063757610637610503565b604051601f8201601f19908116603f0116810190838211818310171561065f5761065f610503565b8160405282815287602084870101111561067857600080fd5b610689836020830160208801610519565b97965050505050505056fea26469706673582212203c4aafa81718277ca94f63d1ac318d6ee83ef76d7f6fdab275596d8f403755c664736f6c634300080e0033";

type StreamConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: StreamConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class Stream__factory extends ContractFactory {
  constructor(...args: StreamConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<Stream> {
    return super.deploy(overrides || {}) as Promise<Stream>;
  }
  override getDeployTransaction(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  override attach(address: string): Stream {
    return super.attach(address) as Stream;
  }
  override connect(signer: Signer): Stream__factory {
    return super.connect(signer) as Stream__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): StreamInterface {
    return new utils.Interface(_abi) as StreamInterface;
  }
  static connect(address: string, signerOrProvider: Signer | Provider): Stream {
    return new Contract(address, _abi, signerOrProvider) as Stream;
  }
}
